import asyncio
from asyncio.events import BaseDefaultEventLoopPolicy as __BasePolicy
from .loop import Loop as __BaseLoop

from typing import Any, Tuple

__version__: str = ...
__all__: Tuple[str, str, str] = ...

class Loop(__BaseLoop, asyncio.AbstractEventLoop): ...

def new_event_loop() -> Loop: ...
def install() -> None: ...

class EventLoopPolicy(__BasePolicy):
    def _loop_factory(self) -> Loop: ...
    def get_child_watcher(self) -> Any: ...
    def set_child_watcher(self, watcher: Any) -> None: ...
