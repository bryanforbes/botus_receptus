import enum
from typing import Any, Set, TypeVar

from . import connresource
from .connection import Connection

_C = TypeVar('_C', bound=Connection)

class TransactionState(enum.Enum):
    NEW: int = ...
    STARTED: int = ...
    COMMITTED: int = ...
    ROLLEDBACK: int = ...
    FAILED: int = ...

ISOLATION_LEVELS: Set[str]

class Transaction(connresource.ConnectionResource[_C]):
    def __init__(
        self, connection: _C, isolation: Any, readonly: Any, deferrable: Any
    ) -> None: ...
    async def __aenter__(self) -> None: ...
    async def __aexit__(self, extype: Any, ex: Any, tb: Any) -> None: ...
    async def start(self) -> None: ...
    async def commit(self) -> None: ...
    async def rollback(self) -> None: ...
