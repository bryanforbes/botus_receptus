# Stubs for asyncpg.exceptions._base (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class PostgresMessageMeta(type):
    def __new__(mcls, name, bases, dct): ...
    @classmethod
    def get_message_class_for_sqlstate(mcls, code): ...

class PostgresMessage:
    def as_dict(self): ...

class PostgresError(PostgresMessage, Exception):
    @classmethod
    def new(cls, fields, query: Optional[Any] = ...): ...

class FatalPostgresError(PostgresError): ...
class UnknownPostgresError(FatalPostgresError): ...

class InterfaceMessage:
    detail: Any = ...
    hint: Any = ...
    def __init__(self, *, detail: Optional[Any] = ..., hint: Optional[Any] = ...) -> None: ...

class InterfaceError(InterfaceMessage, Exception):
    def __init__(self, msg, *, detail: Optional[Any] = ..., hint: Optional[Any] = ...) -> None: ...

class InterfaceWarning(InterfaceMessage, UserWarning):
    def __init__(self, msg, *, detail: Optional[Any] = ..., hint: Optional[Any] = ...) -> None: ...

class InternalClientError(Exception): ...

class PostgresLogMessage(PostgresMessage):
    def __setattr__(self, name, val): ...
    @classmethod
    def new(cls, fields, query: Optional[Any] = ...): ...
