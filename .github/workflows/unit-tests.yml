name: Unit tests

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8]
    env:
      PYTHON: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: dschep/install-poetry-action@v1.3
      with:
        version: 1.0.9
        create_virtualenvs: true
    - name: Cache Poetry virtualenv
      uses: actions/cache@v2
      env:
        cache-name: poetry-cache
      with:
        path: ~/.cache/pypoetry
        key: poetry-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          poetry-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
          poetry-${{ matrix.python-version }}-
    - name: Install dependencies
      run: |
        poetry install -v --extras "db gino_typed uvloop"
    - name: Lint with flake8 and mypy
      run: |
        poetry run flake8 src
        mkdir tmp
        ln -s "../src/uvloop-stubs" tmp/uvloop
        poetry run mypy src/botus_receptus tmp/uvloop
        cd ..
    - name: Test with pytest
      run: |
        poetry run py.test -p no:sugar --cov-report=xml:.coverage.xml
    - name: Upload coverage to codecov
      uses: codecov/codecov-action@v1.0.7
      with:
        env_vars: PYTHON
        file: ./.coverage.xml
