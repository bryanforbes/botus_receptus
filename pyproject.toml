[tool.poetry]
name = "botus_receptus"
version = "0.0.1a"
description = ""
authors = ["Bryan Forbes <bryan@reigndropsfall.net>"]
license = "BSD-3-Clause"
packages = [
  { include = "botus_receptus", from = "src" },
]

include = [
  "botus_receptus/py.typed",
  "asyncpg-stubs/**/*.pyi",
  "uvloop-stubs/**/*.pyi"
]

[tool.poetry.dependencies]
python = "^3.7"
aioitertools = "^0.7.0"
"async-timeout" = ">=3.0.0"
attrs = ">=18.2.0"
click = ">=6.7"
"discord-ext-typed-commands" = {rev = "d9b84eb29fb5d65a186440d8270f41e2739cca65", git = "https://github.com/bryanforbes/discord-ext-typed-commands.git"}
"discord.py-stubs" = "^1.4.0.1"
"typing-extensions" = ">=3.7.4"
toml = "^0.10.1"
pendulum = "~2.1.2"
asyncpg = {version = ">=0.18.2", optional = true}
gino = {version = "^1.0.1", optional = true}
sqlalchemy = {version = "~1.2.18", optional = true}
asyncpg-stubs = {rev = "29ee4dfcd1847cd1f1a232b65c106b4abb44e2d6", git = "https://github.com/bryanforbes/asyncpg-stubs.git", optional = true}
gino-stubs = {rev = "6fdeecd5fc319ccb60030dd4af525ef3c02dfb7e", git = "https://github.com/bryanforbes/gino-stubs.git", optional = true}
uvloop = {version = "~0.14.0", optional = true}

[tool.poetry.extras]
db = ["asyncpg"]
db_typed = ["asyncpg", "asyncpg-stubs"]
gino = ["gino", "sqlalchemy"]
gino_typed = ["gino", "sqlalchemy", "asyncpg-stubs", "gino-stubs"]
uvloop = ["uvloop"]

[tool.poetry.dev-dependencies]
asynctest = "~0.13.0"
black = "^19.3b0"
coverage = {extras = ["toml"], version = "^5.2"}
flake8 = "~3.8"
flake8-bugbear = ">=19.3"
flake8-pyi = "^20.5"
isort = "^5.4.2"
mypy = "^0.782"
pre-commit = "^2.7"
pytest = "^6.0"
pytest-asyncio = "^0.14.0"
pytest-cov = "^2.10"
pytest-mock = "^3.2.0"
pytest-sugar = "^0.9.4"
pytest-xdist = "^2.0"

[tool.black]
line-length = 88
target-version = ["py37"]
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | alembic
  | htmlcov
)/
'''

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "raise NotImplementedError",
  "^\\s+pass$",
  "^\\s*if TYPE_CHECKING:",
  "^\\s*\\.\\.\\.\\s*$",
  "@overload",
  "@abstractmethod",
]

[tool.isort]
extra_standard_library = ["typing_extensions", "_types"]
known_first_party = ["botus_receptus"]
virtual_env = ".venv"
profile = "black"

[tool.pytest.ini_options]
minversion = "6.0"
addopts ="--cov=botus_receptus --cov-branch --cov-report=term -nauto --dist=loadscope"
testpaths = ["tests"]
filterwarnings = [
  "ignore",
  "always:::botus_receptus[.*]"
]

[build-system]
requires = ["poetry>=1.0.0"]
build-backend = "poetry.masonry.api"
