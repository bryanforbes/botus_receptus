[tool.poetry]
name = "botus_receptus"
version = "2.0.0dev5"
description = ""
authors = ["Bryan Forbes <bryan@reigndropsfall.net>"]
license = "BSD-3-Clause"
packages = [
  { include = "botus_receptus", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.9"
typing_extensions = ">=4.1.0"
aioitertools = "^0.8.0"
"async-timeout" = ">=3.0.0"
attrs = ">=18.2.0"
click = ">=8.0"
"discord.py" = { git = "https://github.com/Rapptz/discord.py", branch = "master" }
toml = "^0.10.2"
pendulum = "~2.1.2"
asyncpg = {version = ">=0.22.0", optional = true}
gino = {version = "^1.0.1", optional = true}
sqlalchemy = {version = ">=1.2,<1.4", optional = true}
uvloop = {version = "~0.16.0", optional = true}

[tool.poetry.extras]
db = ["asyncpg"]
dev = ["asyncpg", "gino", "uvloop"]
gino = ["gino"]
uvloop = ["uvloop"]

[tool.poetry.dev-dependencies]
asyncpg-stubs = {git = "https://github.com/bryanforbes/asyncpg-stubs.git", rev = "bb92f810baaa157c3750610a2ac946dfd903a5b8"}
gino-stubs = {git = "https://github.com/bryanforbes/gino-stubs.git", rev = "07171af1658b0e4ecbfac29e832eddf4b7e4733e"}
black = "^22.1"
coverage = {extras = ["toml"], version = "^6.3"}
flake8 = "~4.0"
flake8-bugbear = ">=21.3.1"
flake8-pyi = "^22.2"
isort = "^5.10"
mypy = ">=0.901"
pre-commit = "^2.17"
pytest = "^7.1"
pytest-asyncio = "^0.18.2"
pytest-cov = "^3.0"
pytest-mock = "^3.7"
pytest-sugar = "^0.9.4"
pytest-xdist = "^2.5"
types-toml = "^0.10.4"

[tool.black]
line-length = 88
target-version = ["py39"]
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | alembic
  | htmlcov
)/
'''

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "raise NotImplementedError",
  "^\\s+pass$",
  "^\\s*if TYPE_CHECKING:",
  "^\\s*\\.\\.\\.\\s*$",
  "@overload",
  "@abstractmethod",
]

[tool.isort]
extra_standard_library = ["typing_extensions", "_types"]
known_first_party = ["botus_receptus"]
virtual_env = ".venv"
profile = "black"

[tool.pyright]
include = ["src", "tests"]

pythonVersion = "3.9"
typeCheckingMode = "strict"
reportUnnecessaryTypeIgnoreComment = "warning"
reportPrivateUsage = "none"
reportUnusedImport = "none"
reportUnusedVariable = "none"
reportImportCycles = "none"

[tool.pytest.ini_options]
minversion = "6.0"
addopts ="--cov=botus_receptus --cov-branch --cov-report=term -nauto --dist=loadscope"
testpaths = ["tests"]
filterwarnings = [
  "ignore",
  "always:::botus_receptus[.*]"
]
asyncio_mode = "auto"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
